package tests.gameboard;

import static org.junit.Assert.assertTrue;
import org.junit.Test;
import code.model.GameBoard;
import code.model.MoveableTile;

public class PopulateRandomMoveableTileArrayTests {
	
	
	//This test shows to a high degree of certainty that the two MoveableTile arrays
	//are actually randomly generated by testing over 1,000,000 pairs.
	//In order for boolean actual to be false, at least 50,001 of MoveableTiles checked
	//in each pair would have to be the same.  Thus, it is likely to never have this
	//happen, based on probability theory.
	@Test public void test00(){
		int count_true = 0;
		int count_false = 0;
		
		for(int i = 0; i < 100000; i++){
			GameBoard gb1 = new GameBoard(4);
			GameBoard gb2 = new GameBoard(4);
			gb1.populateRandomMoveableTileArray();
			gb2.populateRandomMoveableTileArray();
			MoveableTile mt1 = gb1.getMoveableTileArray().get(0);
			MoveableTile mt2 = gb2.getMoveableTileArray().get(0);
			int atop = mt1.getTop();
			int aright = mt1.getRight();
			int aleft = mt1.getLeft();
			int abottom = mt1.getBottom();
			int btop = mt2.getTop();
			int bright = mt2.getRight();
			int bleft = mt2.getLeft();
			int bbottom = mt2.getBottom();
			boolean b = (atop==btop && aright==bright && aleft==bleft &&
					abottom==bbottom);
			if(b){count_true++;}
			else{count_false++;}
		}
		boolean expected = true; //the method does make random moveabletile arrays both of 34
		boolean actual = false;
		if(count_false > count_true){
			actual = true;
		}
		assertTrue("",expected==actual);
	}

}
